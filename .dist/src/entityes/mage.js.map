{"version":3,"file":"mage.js","sourceRoot":"","sources":["../../../src/entityes/mage.ts"],"names":[],"mappings":";;;;;;AAAA,6CAAmD;AACnD,kFAAoD;AAEpD,MAAa,IAAK,SAAQ,sBAAS;IAO/B,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAE,OAAmB,EAAE,OAAe;QAC1F,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IACM,aAAa;QAChB,OAAO;YACH,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,OAAO;SACzB,CAAC;IACN,CAAC;IACM,aAAa,CAAC,MAAW,EAAE,EAAU;QACxC,IAAG,EAAE,IAAI,CAAC;YACN,MAAM,wBAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC9C,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;IACzD,CAAC;IACM,MAAM,CAAC,EAAU;QACpB,IAAG,EAAE,IAAI,CAAC;YACN,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,wBAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IACM,UAAU,CAAC,WAAqB,EAAE,aAAuB;QAC5D,IAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3C,MAAM,wBAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC7C,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACrB,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ;AAzCD,oBAyCC","sourcesContent":["import {DamageType, Character} from \"./characters\";\nimport ApiError from \"../exteptions/api-exceptions\";\n\nexport class Mage extends Character{\n    protected class: string;\n    protected hp: number;\n    protected damage: number;\n    protected ability: string;\n    protected dmgType: DamageType;\n\n    constructor(name: string, health: number, damage: number, dmgType: DamageType, ability: string) {\n        super();\n        this.class = name;\n        this.hp = health;\n        this.damage = damage;\n        this.dmgType = dmgType;\n        this.ability = ability;\n    }\n\n    public getHp(): number {\n        return this.hp;\n    }\n    public dealingDamage() {\n        return {\n            damage: this.damage,\n            dmg_type: this.dmgType\n        };\n    }\n    public gettingDamage(damage: any, hp: number): number {\n        if(hp <= 0)\n            throw ApiError.wrongAction('cant_attack');\n        return (hp - damage.damage < 0)?0:hp - damage.damage;\n    }\n    public revive(hp: number): number {\n        if(hp <= 0)\n            return this.getHp();\n        throw ApiError.wrongAction('cant_revive');\n    }\n    public useAbility(ownStatuses: number[], enemyStatuses: number[]): number[] {\n        if(ownStatuses[1] != 0 || enemyStatuses[1] != 0)\n            throw ApiError.wrongAction('cant_spell');\n        enemyStatuses[1] = 1;\n        return enemyStatuses;\n    }\n}"]}