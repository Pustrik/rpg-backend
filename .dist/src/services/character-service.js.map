{"version":3,"file":"character-service.js","sourceRoot":"","sources":["../../../src/services/character-service.ts"],"names":[],"mappings":";;;;;;AAAA,6CAAwC;AACxC,iDAA4C;AAC5C,2CAAsC;AAEtC,yFAAgE;AAEhE,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,+CAAO,CAAA;IACP,yCAAI,CAAA;IACJ,2CAAK,CAAA;IACL,yCAAI,CAAA;AACR,CAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB;AAED,MAAM,eAAe,GAAG,KAAK,EAAE,IAAe,EAAmC,EAAE;IAC/E,MAAM,SAAS,GAAc,MAAM,sBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7D,QAAQ,IAAI,EAAE;QACV,KAAK,SAAS,CAAC,OAAO;YAClB,OAAO,IAAI,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;QACrH,KAAK,SAAS,CAAC,IAAI;YACf,OAAO,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;QAClH,KAAK,SAAS,CAAC,KAAK;YAChB,OAAO,IAAI,aAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;QACnH;YACI,OAAO,IAAI,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;KACxH;AACL,CAAC,CAAA;AAED,MAAa,gBAAgB;IACzB,KAAK,CAAC,MAAM;QACR,IAAI;YACA,MAAM,UAAU,GAAkC,EAAE,CAAC;YACrD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;gBAC3C,UAAU,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACvD;YACD,OAAO,UAAU,CAAC;SACrB;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClB;IACL,CAAC;CACJ;AAZD,4CAYC","sourcesContent":["import {Thief} from \"../entityes/thief\";\nimport {Warrior} from \"../entityes/warrior\";\nimport {Mage} from \"../entityes/mage\";\nimport IClassPDB from \"../../interfaces/i-class-pdb\";\nimport ClassesRepo from \"../repositories/postgres/classes-repo\";\n\nexport enum CharClass {\n    WARRIOR,\n    MAGE,\n    THIEF,\n    SIZE\n}\n\nconst createCharacter = async (char: CharClass): Promise<Warrior | Mage | Thief> => {\n    const classInfo: IClassPDB = await ClassesRepo.getById(char);\n    switch (char) {\n        case CharClass.WARRIOR:\n            return new Warrior(classInfo.name, classInfo.health, classInfo.damage, classInfo.attack_type, classInfo.ability);\n        case CharClass.MAGE:\n            return new Mage(classInfo.name, classInfo.health, classInfo.damage, classInfo.attack_type, classInfo.ability);\n        case CharClass.THIEF:\n            return new Thief(classInfo.name, classInfo.health, classInfo.damage, classInfo.attack_type, classInfo.ability);\n        default:\n            return new Warrior(classInfo.name, classInfo.health, classInfo.damage, classInfo.attack_type, classInfo.ability);\n    }\n}\n\nexport class CharacterFactory {\n    async create() {\n        try {\n            const characters: Array<Warrior | Mage | Thief> = [];\n            for (let key = 0; key < CharClass.SIZE; key++) {\n                characters.push(await createCharacter(Number(key)));\n            }\n            return characters;\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}"]}