{"version":3,"file":"redis-db.js","sourceRoot":"","sources":["../../../../src/databases/redis/redis-db.ts"],"names":[],"mappings":";;;;;;AAAA,iCAAmC;AACnC,2FAAkE;AAEvD,QAAA,KAAK,GAAG,IAAI,CAAC;AAExB,MAAM,OAAO;IAET;QACI,aAAK,GAAG,IAAA,oBAAY,GAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,OAAO;QACT,MAAM,aAAK,CAAC,OAAO,EAAE;aAChB,IAAI,CAAC,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,IAAG,CAAC,aAAK,CAAC,MAAM,CAAC,UAAU,CAAC;gBAAE,uBAAY,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAC,EAAE,EAAE,OAAO,EAAC,EAAE,EAAC,CAAC,CAAC;QAChF,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,CAAC,CAAC,CAAA;IACnE,CAAC;CACJ;AAED,kBAAe,IAAI,OAAO,EAAE,CAAC","sourcesContent":["import {createClient} from \"redis\";\nimport MessagesRepo from \"../../repositories/redis/messages-repo\";\n\nexport let redis = null;\n\nclass RedisDB {\n\n    constructor() {\n        redis = createClient();\n    }\n\n    async connect() {\n        await redis.connect()\n            .then(() => {\n                console.log('Connected to redisDB');\n                if(!redis.exists('messages')) MessagesRepo.write({username:'', message:''});\n            })\n            .catch((e) => console.log('Cant connect to redisDB: ' + e))\n    }\n}\n\nexport default new RedisDB();\n"]}